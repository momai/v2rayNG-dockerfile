name: Build and Release on new v2rayNG tag

on:
  schedule:
    - cron: '0 * * * *' # каждый час
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout self
        uses: actions/checkout@v3

      - name: Get latest upstream tag
        id: get_tag
        run: |
          git ls-remote --tags https://github.com/2dust/v2rayNG.git | \
            awk -F/ '{print $3}' | grep -v '\^{}' | sort -V | tail -n1 > latest_tag.txt
          echo "tag=$(cat latest_tag.txt)" >> $GITHUB_OUTPUT

      - name: Check if release exists
        id: check_release
        run: |
          if gh release view "${{ steps.get_tag.outputs.tag }}" > /dev/null 2>&1; then
            echo "Release already exists, exiting."
            exit 0
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          repo=$(echo "${GITHUB_REPOSITORY,,}")
          docker build -t ghcr.io/$repo:${{ steps.get_tag.outputs.tag }} .

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image with version tag
        run: |
          repo=$(echo "${GITHUB_REPOSITORY,,}")
          docker push ghcr.io/$repo:${{ steps.get_tag.outputs.tag }}

      - name: Tag and push Docker image as latest
        run: |
          repo=$(echo "${GITHUB_REPOSITORY,,}")
          docker tag ghcr.io/$repo:${{ steps.get_tag.outputs.tag }} ghcr.io/$repo:latest
          docker push ghcr.io/$repo:latest

      - name: Create and push tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag ${{ steps.get_tag.outputs.tag }}
          git push origin ${{ steps.get_tag.outputs.tag }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          name: Release ${{ steps.get_tag.outputs.tag }}
          body: |
            ## Сборка v2rayNG с автоматическим добавлением подписки

            ### Как использовать

            Используйте Docker-образ из нашего GitHub Container Registry:

            ```bash
            # Рекомендуется использовать конкретную версию (этот релиз)
            docker run --rm -v $(pwd)/output:/output ghcr.io/${{ github.repository_owner }}/v2rayng-dockerfile:${{ steps.get_tag.outputs.tag }} -PmyArgument=https://example.com/s/your-subscription-url
            
            # Или можно использовать latest версию
            docker run --rm -v $(pwd)/output:/output ghcr.io/${{ github.repository_owner }}/v2rayng-dockerfile:latest -PmyArgument=https://example.com/s/your-subscription-url
            ```

            Где:
            - `https://example.com/s/your-subscription-url` — URL вашей VPN-подписки
            - Собранные APK-файлы будут доступны в директории `output/`

            ### Детали релиза
            
            Этот релиз основан на v2rayNG [${{ steps.get_tag.outputs.tag }}](https://github.com/2dust/v2rayNG/releases/tag/${{ steps.get_tag.outputs.tag }})
            
            Docker-образы:
            - Версия этого релиза: `ghcr.io/${{ github.repository_owner }}/v2rayng-dockerfile:${{ steps.get_tag.outputs.tag }}`
            - Последняя версия: `ghcr.io/${{ github.repository_owner }}/v2rayng-dockerfile:latest` 
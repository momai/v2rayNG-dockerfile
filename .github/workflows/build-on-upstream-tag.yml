name: Build and Release on new v2rayNG tag

on:
  schedule:
    - cron: '0 0 */2 * *'  # Запуск по чётным дням месяца (каждые два дня)
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout self
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Получить все теги

      - name: Get latest upstream tag
        id: get_tag
        run: |
          git ls-remote --tags https://github.com/2dust/v2rayNG.git | \
            awk -F/ '{print $3}' | grep -v '\^{}' | sort -V | tail -n1 > latest_tag.txt
          echo "tag=$(cat latest_tag.txt)" >> $GITHUB_OUTPUT

      - name: Check if tag already exists in our repo
        id: check_tag
        run: |
          if git tag -l "${{ steps.get_tag.outputs.tag }}" | grep -q "${{ steps.get_tag.outputs.tag }}"; then
            echo "Тег ${{ steps.get_tag.outputs.tag }} уже существует в репозитории. Пропускаем сборку."
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Тег ${{ steps.get_tag.outputs.tag }} не найден. Продолжаем сборку."
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Skip workflow if tag exists
        if: steps.check_tag.outputs.tag_exists == 'true'
        run: |
          echo "Тег уже существует, пропускаем сборку."
          exit 0

      - name: Build Docker image
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: |
          repo=$(echo "${GITHUB_REPOSITORY,,}")
          docker build -t ghcr.io/$repo:${{ steps.get_tag.outputs.tag }} .

      - name: Login to GitHub Container Registry
        if: steps.check_tag.outputs.tag_exists == 'false'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image with version tag
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: |
          repo=$(echo "${GITHUB_REPOSITORY,,}")
          docker push ghcr.io/$repo:${{ steps.get_tag.outputs.tag }}

      - name: Tag and push Docker image as latest
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: |
          repo=$(echo "${GITHUB_REPOSITORY,,}")
          docker tag ghcr.io/$repo:${{ steps.get_tag.outputs.tag }} ghcr.io/$repo:latest
          docker push ghcr.io/$repo:latest

      - name: Create and push tag
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag ${{ steps.get_tag.outputs.tag }}
          git push origin ${{ steps.get_tag.outputs.tag }}

      - name: Create GitHub Release
        if: steps.check_tag.outputs.tag_exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          name: Release ${{ steps.get_tag.outputs.tag }}
          body: |
            ## v2rayNG Subscription Builder

            [Перейти к русской версии](#russian)

            ---

            ## English

            **Docker image for building v2rayNG with automatic subscription import.**

            **Usage:**
            ```bash
            docker run --rm -v $(pwd)/output:/output ghcr.io/${{ github.repository_owner }}/v2rayng-dockerfile:${{ steps.get_tag.outputs.tag }} -PmyArgument=https://example.com/s/your-subscription-url
            ```
            - **Replace** the URL with your **subscription link**.
            - APKs will appear in `output/`.

            - Version: `ghcr.io/${{ github.repository_owner }}/v2rayng-dockerfile:${{ steps.get_tag.outputs.tag }}`
            - Latest: `ghcr.io/${{ github.repository_owner }}/v2rayng-dockerfile:latest`

            ---

            ## <a name="russian"></a>Русский

            **Docker-образ для сборки v2rayNG с автоматическим импортом подписки.**

            **Использование:**
            ```bash
            docker run --rm -v $(pwd)/output:/output ghcr.io/${{ github.repository_owner }}/v2rayng-dockerfile:${{ steps.get_tag.outputs.tag }} -PmyArgument=https://example.com/s/your-subscription-url
            ```
            - **Замените** ссылку на вашу **подписку**.
            - APK-файлы появятся в папке `output/`.

            - Версия: `ghcr.io/${{ github.repository_owner }}/v2rayng-dockerfile:${{ steps.get_tag.outputs.tag }}`
            - Последняя: `ghcr.io/${{ github.repository_owner }}/v2rayng-dockerfile:latest`

            ---

            Based on v2rayNG [${{ steps.get_tag.outputs.tag }}](https://github.com/2dust/v2rayNG/releases/tag/${{ steps.get_tag.outputs.tag }})

      - name: Write summary if skipped
        if: steps.check_tag.outputs.tag_exists == 'true'
        run: |
          echo "### ⚠️ Сборка пропущена" >> $GITHUB_STEP_SUMMARY
          echo "Тег \`${{ steps.get_tag.outputs.tag }}\` уже существует в репозитории. Новая сборка не требуется." >> $GITHUB_STEP_SUMMARY

      - name: Write summary if built
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: |
          echo "### ✅ Сборка и публикация завершены" >> $GITHUB_STEP_SUMMARY
          echo "- Новый тег: \`${{ steps.get_tag.outputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Docker-образ: \`ghcr.io/${{ github.repository_owner }}/v2rayng-dockerfile:${{ steps.get_tag.outputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Последний образ: \`ghcr.io/${{ github.repository_owner }}/v2rayng-dockerfile:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "- [Релиз на GitHub](https://github.com/${{ github.repository }}/releases/tag/${{ steps.get_tag.outputs.tag }})" >> $GITHUB_STEP_SUMMARY 